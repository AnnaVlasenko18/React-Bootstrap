{"version":3,"file":"static/js/203.658f3af5.chunk.js","mappings":"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","sources":["components/Components/Accordion/Accordion.js","components/Components/Alerts/Alerts.js","components/Components/Badges/Badges.js","components/Components/Breadcrumbs/Breadcrumbs.js","pages/ComponentsPage/ComponentsPage.js"],"sourcesContent":["import Accordion from 'react-bootstrap/Accordion';\nimport { useAccordionButton } from 'react-bootstrap/AccordionButton';\nimport Card from 'react-bootstrap/Card';\nimport { useContext } from 'react';\nimport AccordionContext from 'react-bootstrap/AccordionContext';\n\n\nfunction CustomToggle({ children, eventKey }) {\n    const decoratedOnClick = useAccordionButton(eventKey, () =>\n      console.log('totally custom!'),\n    );\n  \n    return (\n      <button\n        type=\"button\"\n        style={{ backgroundColor: 'pink' }}\n        onClick={decoratedOnClick}\n      >\n        {children}\n      </button>\n    );\n  }\n\n  const PINK = 'rgba(255, 192, 203, 0.6)';\nconst BLUE = 'rgba(0, 0, 255, 0.6)';\n\nfunction ContextAwareToggle({ children, eventKey, callback }) {\n  const { activeEventKey } = useContext(AccordionContext);\n\n  const decoratedOnClick = useAccordionButton(\n    eventKey,\n    () => callback && callback(eventKey),\n  );\n\n  const isCurrentEventKey = activeEventKey === eventKey;\n\n  return (\n    <button\n      type=\"button\"\n      style={{ backgroundColor: isCurrentEventKey ? PINK : BLUE }}\n      onClick={decoratedOnClick}\n    >\n      {children}\n    </button>\n  );\n}\n\nfunction Accordions() {\n\n  return (\n    <>\n    <h2>Accordion</h2>\n    <h3>Basic Example</h3>\n    <Accordion defaultActiveKey=\"0\">\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>Accordion Item #1</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>Accordion Item #2</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>    \n    </Accordion>\n\n    <h3>Fully Collapsed State</h3>\n    <Accordion>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>Accordion Item #1</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>Accordion Item #2</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n\n    <h3>Flush</h3>\n    <Accordion defaultActiveKey=\"0\" flush>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>Accordion Item #1</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>Accordion Item #2</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n\n    <h3>Always open</h3>\n    <Accordion defaultActiveKey={['0']} alwaysOpen>\n      <Accordion.Item eventKey=\"0\">\n        <Accordion.Header>Accordion Item #1</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n      <Accordion.Item eventKey=\"1\">\n        <Accordion.Header>Accordion Item #2</Accordion.Header>\n        <Accordion.Body>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n          culpa qui officia deserunt mollit anim id est laborum.\n        </Accordion.Body>\n      </Accordion.Item>\n    </Accordion>\n\n    <h2>Custom Accordions</h2>\n    <h3>Custom Toggle</h3>\n    <Accordion defaultActiveKey=\"0\">\n      <Card>\n        <Card.Header>\n          <CustomToggle eventKey=\"0\">Click me!</CustomToggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>Hello! I'm the body</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Card.Header>\n          <CustomToggle eventKey=\"1\">Click me!</CustomToggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>Hello! I'm another body</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n\n    <h3>Custom Toggle with Expansion Awareness</h3>\n    <Accordion defaultActiveKey=\"0\">\n      <Card>\n        <Card.Header>\n          <ContextAwareToggle eventKey=\"0\">Click me!</ContextAwareToggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey=\"0\">\n          <Card.Body>Hello! I am the body</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n      <Card>\n        <Card.Header>\n          <ContextAwareToggle eventKey=\"1\">Click me!</ContextAwareToggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey=\"1\">\n          <Card.Body>Hello! I am another body</Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n    </>\n    \n  );\n}\n\nexport default Accordions;","import { useState } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\n\nfunction Alerts() {\n    const [show, setShow] = useState(true);\n  return (\n    <>\n    <h2>Alerts</h2>\n      {[\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n      ].map((variant) => (\n        <Alert key={variant} variant={variant}>\n          This is a {variant} alert—check it out!\n        </Alert>\n      ))}\n\n      <h3>Links</h3>\n      {[\n        'primary',\n        'secondary',\n        'success',\n        'danger',\n        'warning',\n        'info',\n        'light',\n        'dark',\n      ].map((variant) => (\n        <Alert key={variant} variant={variant}>\n          This is a {variant} alert with{' '}\n          <Alert.Link href=\"#\">an example link</Alert.Link>. Give it a click if\n          you like.\n        </Alert>\n      ))}\n\n      <h2>Additional content</h2>\n      <Alert variant=\"success\">\n      <Alert.Heading>Hey, nice to see you</Alert.Heading>\n      <p>\n        Aww yeah, you successfully read this important alert message. This\n        example text is going to run a bit longer so that you can see how\n        spacing within an alert works with this kind of content.\n      </p>\n      <hr />\n      <p className=\"mb-0\">\n        Whenever you need to, be sure to use margin utilities to keep things\n        nice and tidy.\n      </p>\n    </Alert>\n\n    <h3>Dismissing</h3>\n    <Alert show={show} variant=\"success\">\n        <Alert.Heading>My Alert</Alert.Heading>\n        <p>\n          Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget\n          lacinia odio sem nec elit. Cras mattis consectetur purus sit amet\n          fermentum.\n        </p>\n        <hr />\n        <div className=\"d-flex justify-content-end\">\n          <Button onClick={() => setShow(false)} variant=\"outline-success\">\n            Close me\n          </Button>\n        </div>\n      </Alert>\n\n      {!show && <Button onClick={() => setShow(true)}>Show Alert</Button>}\n    </>\n  );\n}\n\nexport default Alerts;","import Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport Stack from 'react-bootstrap/Stack';\n\nfunction Badges() {\n  return (\n    <div>\n      <h1>Badges</h1>\n      <h2>\n        Example heading <Badge bg=\"secondary\">New</Badge>\n      </h2>\n      <h3>\n        Example heading <Badge bg=\"secondary\">New</Badge>\n      </h3>\n      <h4>\n        Example heading <Badge bg=\"secondary\">New</Badge>\n      </h4>\n      <h5>\n        Example heading <Badge bg=\"secondary\">New</Badge>\n      </h5>\n      <h6>\n        Example heading <Badge bg=\"secondary\">New</Badge>\n      </h6>\n\n      <Button variant=\"primary\">\n      Profile <Badge bg=\"secondary\">9</Badge>\n      <span className=\"visually-hidden\">unread messages</span>\n    </Button>\n\n    <h3>Contextual variations</h3>\n    <Stack direction=\"horizontal\" gap={2}>\n      <Badge bg=\"primary\">Primary</Badge>\n      <Badge bg=\"secondary\">Secondary</Badge>\n      <Badge bg=\"success\">Success</Badge>\n      <Badge bg=\"danger\">Danger</Badge>\n      <Badge bg=\"warning\" text=\"dark\">\n        Warning\n      </Badge>\n      <Badge bg=\"info\">Info</Badge>\n      <Badge bg=\"light\" text=\"dark\">\n        Light\n      </Badge>\n      <Badge bg=\"dark\">Dark</Badge>\n    </Stack>\n    </div>\n  );\n}\n\nexport default Badges;","import Breadcrumb from 'react-bootstrap/Breadcrumb';\n\nfunction Breadcrumbs() {\n  return (\n    <>    \n    <h2>Breadcrumbs</h2>\n    <Breadcrumb>\n      <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\n      <Breadcrumb.Item href=\"https://getbootstrap.com/docs/4.0/components/breadcrumb/\">\n        Library\n      </Breadcrumb.Item>\n      <Breadcrumb.Item active>Data</Breadcrumb.Item>\n    </Breadcrumb>\n    </>\n\n  );\n}\n\nexport default Breadcrumbs;","import  Accordions from \"../../components/Components/Accordion/Accordion\";\nimport Alerts from '../../components/Components/Alerts/Alerts'\nimport Badges from '../../components/Components/Badges/Badges'\nimport Breadcrumbs from '../../components/Components/Breadcrumbs/Breadcrumbs'\n// import Alerts from '../../components/Components'\n// import Alerts from '../../components/Components'\n// import Alerts from '../../components/Components'\n// import Alerts from '../../components/Components'\n\n\n\nfunction ComponentsPage() {\n    return (\n     <>\n     <h1>Components</h1>\n     <Accordions/>\n     <Alerts/>\n     <Badges/>\n     <Breadcrumbs/>\n     </>\n    );\n  }\n  \n  export default ComponentsPage;"],"names":["CustomToggle","_ref","children","eventKey","decoratedOnClick","useAccordionButton","console","log","_jsx","type","style","backgroundColor","onClick","PINK","BLUE","ContextAwareToggle","_ref2","callback","activeEventKey","useContext","AccordionContext","isCurrentEventKey","_jsxs","_Fragment","Accordion","defaultActiveKey","Item","Header","Body","flush","alwaysOpen","Card","Collapse","show","setShow","useState","map","variant","Alert","Link","href","Heading","className","Button","Badge","bg","Stack","direction","gap","text","Breadcrumb","active","Accordions","Alerts","Badges","Breadcrumbs"],"sourceRoot":""}